// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PractiFly.DbContextUtility.Context.PractiflyDb;

#nullable disable

namespace PractiFly.DbContextUtility.Migrations
{
    [DbContext(typeof(PractiFlyContext))]
    [Migration("20230419141543_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PractiFly.DbEntities.Courses.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Description");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer")
                        .HasColumnName("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseCompetency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetencyId")
                        .HasColumnType("integer")
                        .HasColumnName("CompetencyId");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseCompetency");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseCourseId")
                        .HasColumnType("integer")
                        .HasColumnName("BaseCourseId")
                        .HasColumnOrder(2);

                    b.Property<int>("CourseDependencyTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseDependencyTypeId");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId")
                        .HasColumnOrder(1);

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("BaseCourseId");

                    b.HasIndex("CourseDependencyTypeId");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseDependency");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseDependencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("Url");

                    b.HasKey("Id");

                    b.ToTable("CourseDependencyType");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseHeading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId");

                    b.Property<int>("HeadingId")
                        .HasColumnType("integer")
                        .HasColumnName("HeadingId");

                    b.Property<bool>("IsBasic")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBasic");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("HeadingId");

                    b.ToTable("CourseHeading");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("boolean")
                        .HasColumnName("IsReserved");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("integer")
                        .HasColumnName("PriorityLevel");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("MaterialId");

                    b.ToTable("CourseMaterial");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId");

                    b.Property<string>("Description")
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Description");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("Number");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LevelId");

                    b.ToTable("Theme");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.ThemeMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsBasic")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBasic");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("Number");

                    b.Property<int>("ThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("ThemeId");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ThemeId");

                    b.ToTable("ThemeMaterial");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Competency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Description");

                    b.Property<int>("HeadingId")
                        .HasColumnType("integer")
                        .HasColumnName("HeadingId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("HeadingId");

                    b.HasIndex("ParentId");

                    b.ToTable("Competency");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Heading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("Code");

                    b.Property<string>("Description")
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<string>("Udc")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("UDC");

                    b.HasKey("Id");

                    b.ToTable("Heading");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.HeadingCompetency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetencyId")
                        .HasColumnType("integer")
                        .HasColumnName("CompetencyId");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("LevelId");

                    b.ToTable("HeadingCompetency");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.HeadingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HeadingId")
                        .HasColumnType("integer")
                        .HasColumnName("HeadingId");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("HeadingId");

                    b.HasIndex("MaterialId");

                    b.ToTable("HeadingMaterial");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("OriginalName");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(65536)
                        .HasColumnType("character varying(65536)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("Number");

                    b.HasKey("Id");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPractical")
                        .HasColumnType("boolean")
                        .HasColumnName("IsPractical");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.MaterialBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChildId")
                        .HasColumnType("integer")
                        .HasColumnName("ChildId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("Number");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer")
                        .HasColumnName("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId");

                    b.ToTable("MaterialBlock");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.MaterialCompetency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetencyId")
                        .HasColumnType("integer")
                        .HasColumnName("CompetencyId");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialCompetency");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("Text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("FoundationDate")
                        .HasColumnType("date")
                        .HasColumnName("FoundationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<DateOnly>("TerminationDate")
                        .HasColumnType("date")
                        .HasColumnName("TerminationDate");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.GroupCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("GroupId");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsCompleted");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GroupId");

                    b.HasIndex("LevelId");

                    b.ToTable("GroupCourse");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("Birthday");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FilePhoto")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("FilePhoto");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("LastName");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("RegistrationDate")
                        .HasColumnType("date")
                        .HasColumnName("RegistrationDate");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("CourseId");

                    b.Property<int>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("Grade");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsCompleted");

                    b.Property<int>("LastThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("LastThemeId");

                    b.Property<DateTime>("LastTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("LastTime");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("LastThemeId");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCourse");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("GroupId");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("IsActive");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserHeading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HeadingId")
                        .HasColumnType("integer")
                        .HasColumnName("HeadingId");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HeadingId");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHeading");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("Grade");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsCompleted");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<string>("ResultUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("ResultUrl");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMaterial");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Grade")
                        .HasColumnType("integer")
                        .HasColumnName("Grade");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsCompleted");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("LevelId");

                    b.Property<string>("Note")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("Note");

                    b.Property<int>("ThemeId")
                        .HasColumnType("integer")
                        .HasColumnName("ThemeId");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("ThemeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTheme");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.Course", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseCompetency", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseDependency", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Courses.Course", "BaseCourse")
                        .WithMany()
                        .HasForeignKey("BaseCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Courses.CourseDependencyType", "CourseDependencyType")
                        .WithMany()
                        .HasForeignKey("CourseDependencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseCourse");

                    b.Navigation("Course");

                    b.Navigation("CourseDependencyType");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseHeading", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Heading", "Heading")
                        .WithMany()
                        .HasForeignKey("HeadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Heading");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.CourseMaterial", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.Theme", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Courses.ThemeMaterial", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Courses.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("Material");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Competency", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Heading", "Heading")
                        .WithMany()
                        .HasForeignKey("HeadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Competency", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Heading");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.HeadingCompetency", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.HeadingMaterial", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Heading", "Heading")
                        .WithMany()
                        .HasForeignKey("HeadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heading");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.MaterialBlock", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.MaterialCompetency", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Materials.Unit", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.GroupCourse", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserCourse", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Courses.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Courses.Theme", "LastTheme")
                        .WithMany()
                        .HasForeignKey("LastThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("LastTheme");

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserGroup", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Users.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserHeading", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Heading", "Heading")
                        .WithMany()
                        .HasForeignKey("HeadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heading");

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserMaterial", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PractiFly.DbEntities.Users.UserTheme", b =>
                {
                    b.HasOne("PractiFly.DbEntities.Materials.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Courses.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PractiFly.DbEntities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("Theme");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
